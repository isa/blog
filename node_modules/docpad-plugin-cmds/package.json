{
  "name": "docpad-plugin-cmds",
  "version": "2.0.7",
  "description": "Adds support for shell script compilation to DocPad",
  "homepage": "http://docpad.org/plugin/cmds",
  "keywords": [
    "docpad",
    "docpad-plugin",
    "commands",
    "script",
    "shell",
    "cmd"
  ],
  "author": {
    "name": "Stringz Solutions Ltd"
  },
  "maintainers": [
    {
      "name": "Peter Flannery",
      "url": "https://github.com/pflannery"
    }
  ],
  "contributors": [
    {
      "name": "Peter Flannery",
      "url": "https://github.com/pflannery"
    }
  ],
  "bugs": {
    "url": "https://github.com/pflannery/docpad-plugin-cmds/issues"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/pflannery/docpad-plugin-cmds.git"
  },
  "engines": {
    "node": ">=0.4",
    "docpad": "6.x"
  },
  "dependencies": {
    "taskgroup": "3.3.1"
  },
  "devDependencies": {
    "coffee-script": "latest",
    "docpad": ">=6.37 <7"
  },
  "main": "./out/cmds.plugin.js",
  "scripts": {
    "test": "node ./out/cmds.test.js",
    "test-debug": "node --debug-brk ./out/cmds.test.js"
  },
  "readme": "# Cmds Plugin for [DocPad](http://docpad.org)\r\n\r\n[![Build Status](https://secure.travis-ci.org/pflannery/docpad-plugin-cmds.png?branch=master)](http://travis-ci.org/pflannery/docpad-plugin-cmds \"Check this project's build status on TravisCI\")\r\n[![NPM version](https://badge.fury.io/js/docpad-plugin-cmds.png)](https://npmjs.org/package/docpad-plugin-cmds \"View this project on NPM\")\r\n[![Dependency Status](https://gemnasium.com/pflannery/docpad-plugin-cmds.png)](https://gemnasium.com/pflannery/docpad-plugin-cmds)\r\n[![Gittip donate button](http://img.shields.io/gittip/pflannery.png)](https://www.gittip.com/pflannery/ \"Donate weekly to this project using Gittip\")\r\n[![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/pflannery/docpad-plugin-cmds/trend.png)](https://bitdeli.com/free \"Bitdeli Badge\")\r\n\r\nConvention:  `.bash`\r\nConvention:  `.sh`\r\nConvention:  `.ps1` or `.cmd` (windows only)\r\n\r\nThe above can be rendered to any extension i.e. (.html.sh) or just run as a single extension process like a script.\r\n\r\n.bash and .sh files are supported on windows if you have gnu\\bash\\sh\\cygwyn tools installed and in the environment path.\r\n\r\nScripts can determined when to run, i.e. writeAfter or generateBefore etc...\r\n\r\n##Example usage\r\n\r\n```sh\r\necho 123\r\necho 456\r\n```\r\n\r\n```sh\r\necho \"<script>\"\r\necho \"document.write(\"\r\ncurl http://www.servicestack.net/ServiceStack.Northwind/customers?format=json\r\necho \".Customers.length);\"\r\necho \"</script>\"\r\n```\r\n\r\nWindows cmd multiple lines\r\n\r\n```cmd\r\necho 123 & echo 456\r\n```\r\n\r\n##Front matter options\r\n\r\n<table>\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th>Name</th>\r\n\t\t\t<th>Desc</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tr>\r\n\t\t<td>print</td>\r\n\t\t<td>true or false. Specifies if you want to print output to the console</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>when</td>\r\n\t\t<td>\r\n\t\t\tused when wanting to run the script during a specific docpad event<br />\r\n\t\t\t(<strong>only</strong> works for scripts placed in the shell collection folder)\r\n<ul>\r\n<li>generateBefore \r\n<li>generateAfter \r\n<li>renderBefore\r\n<li>renderAfter\r\n<li>writeBefore\r\n<li>writeAfter \r\n<li>render (default)\r\n</ul>\r\n\t\t</td>\r\n\t</tr>\r\n</table>\r\n\r\n## Install\r\n\r\n```\r\nnpm install --save docpad-plugin-cmds\r\n```\r\n\r\n## Config\r\n\r\n```\r\ncmds:\r\n\t# shell collection folder (can be an array of folder names)\r\n\tshellPath: \"shell\"\r\n\t\r\n\t# default collection name\r\n\tcollectionName: \"shell\"\r\n\t\r\n\t# powershell path for windows (will also work in bash on windows)\r\n\tpsPath: 'C:\\\\Windows\\\\System32\\\\WindowsPowerShell\\\\v1.0\\\\powershell' # default\r\n```\r\n\r\n##Ordered Scripts\r\n\r\nWhen using the \"when\" meta scripts are sorted by relativePath. \r\nThis allows us to execute scripts in a specific order.\r\n\r\nexample:\r\n\r\n\t# example script order with relative paths\r\n\ttask1.bash\r\n\ttask2.bash\r\n\t\r\n\ttask1\\step1.bash\r\n\ttask1\\step2.bash\r\n\ttask1\\step3.bash\r\n\r\n\ttask2\\step1.bash\r\n\ttask2\\step2.bash\r\n\ttask2\\step3.bash\r\n\r\n##Env\r\n\r\nDocument attributes are added to the env (in full caps with an underscore seperator) \r\n\r\n```bash\r\n# bash\r\n$DOCUMENT_TITLE, $DOCUMENT_FILENAME, etc..\r\n$DOCPAD_CONFIG_ROOTPATH, $DOCPAD_CONFIG_OUTPATH, etc..\r\n```\r\n\r\n```ps1\r\n# ps1\r\n$env:DOCUMENT_TITLE, $env:DOCUMENT_FILENAME, etc..\r\n$env:DOCPAD_CONFIG_ROOTPATH, $env:DOCPAD_CONFIG_OUTPATH, etc..\r\n```\r\n\r\npowershell c# example\r\n```ps1\r\n$source = @\"\r\npublic class BasicTest\r\n{\r\n    public static int Add(int a, int b)\r\n    {\r\n        return (a + b);\r\n    }\r\n\r\n    public int Multiply(int a, int b)\r\n    {\r\n        return (a * b);\r\n    }\r\n}\r\n\"@\r\n\r\n# load the source\r\nAdd-Type -TypeDefinition $source\r\n\r\n# static ref\r\n[BasicTest]::Add(4, 3)\r\n\r\n# instance ref\r\n$basicTestObject = New-Object BasicTest \r\n$basicTestObject.Multiply(5, 2)\r\n```\r\n\r\n## History\r\n[You can discover the history inside the `History.md` file](https://github.com/pflannery/docpad-plugin-cmds/blob/master/History.md#files)\r\n\r\n## Contributing\r\n[You can discover the contributing instructions inside the `Contributing.md` file](https://github.com/bevry/docpad-plugin-cmds/blob/master/Contributing.md#files)\r\n\r\n## License\r\nLicensed under the incredibly [permissive](http://en.wikipedia.org/wiki/Permissive_free_software_licence) [MIT License](http://creativecommons.org/licenses/MIT/)\r\n<br/>Copyright &copy; 2013+ Stringz Solutions Ltd\r\n<br/>Copyright &copy; 2013+ [Peter Flannery](http://github.com/pflannery)\r\n",
  "readmeFilename": "README.md",
  "_id": "docpad-plugin-cmds@2.0.7",
  "dist": {
    "shasum": "9c8587421352260b59ab51f32048db2da111a225"
  },
  "_from": "docpad-plugin-cmds@2",
  "_resolved": "https://registry.npmjs.org/docpad-plugin-cmds/-/docpad-plugin-cmds-2.0.7.tgz"
}
